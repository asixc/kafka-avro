spring.kafka.template.default-topic=springavrotopic
spring.kafka.properties.schema.registry.url=http://localhost:8081
#logging.level.org.apache.kafka.=debug

# producer
spring.kafka.producer.bootstrap-servers=localhost:9092
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=io.confluent.kafka.serializers.KafkaAvroSerializer
spring.kafka.producer.acks=all
spring.kafka.producer.retries=5
spring.kafka.producer.properties.retry.backoff.ms=150
# consumer
spring.kafka.consumer.bootstrap-servers=localhost:9092
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=io.confluent.kafka.serializers.KafkaAvroDeserializer
spring.kafka.consumer.group-id=avrogroup
# Property para que lea/reciba en el consumer como avro
spring.kafka.consumer.properties.specific.avro.reader=true

spring.mvc.format.date=yyyy-MM-dd